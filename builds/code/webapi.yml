parameters:
  - name: 'environments'
    type: object
    default:
        - environment: dev
          azuresub: 'CFT-RM-DEV'
          branchName: 'develop'
          dependsOn: 'Build'
          region: ['em22']
          isDeployToSlot: false
        
        - environment: qa
          azuresub: 'CFT-RM-DEV'
          branchName: 'develop'
          dependsOn: 'Build'
          region: ['em22']
          isDeployToSlot: false

        - environment: iat
          azuresub: 'CFT-RM-DEV'
          branchName: 'release'
          dependsOn: 'Build'
          region: ['em22']
          isDeployToSlot: true

        - environment: rc
          azuresub: 'CFT-RM-DEV'
          branchName: 'release'
          dependsOn: 'Build'
          region: ['em22']
          isDeployToSlot: false

        - environment: prod
          azuresub: 'CFT-RM-PROD'
          branchName: 'release'
          dependsOn: iat_em22
          region: ['em22', 'na20']
          isDeployToSlot: false

  - name: isaddvargroupsuffix
    type: boolean
    default: false
  - name: 'buildPlatform'
    type: string
    default: 'Any CPU'
  - name: 'buildConfiguration'
    type: string
    default: 'Release'
  - name: 'dotnetVersion'
    type: string
    default: '6.0.412'
  - name: enabled
    type: boolean
    default: false
  - name: 'projectkey'
    type: string
  - name: 'projectName'
    type: string
  - name: solution
    type: string
  - name: nugetConfigPath
    type: string
  - name: projectOrSolution
    type: string
    default: builds/Code/nuget.config
  - name: projects
    type: string
  - name: SonarCloudenabled 
    type: boolean
  - name: 'WebAppName'
    type: string
  - name: ResourceGroupName
    type: string
  - name: variableGroup
    type: object
  - name: AppSettings
    type: string
    default: ""


stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Job_1
    displayName: Agent job 1
    pool:
      vmImage: windows-latest
    steps:
    - checkout: self
    - checkout: RIC.DevOps
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: ${{parameters.dotnetVersion}}
    - task: NuGetToolInstaller@1
      displayName: 'Use NuGet '
      inputs:
        checkLatest: true

    - task: SonarCloudPrepare@1
      displayName: 'Prepare analysis on SonarCloud'
      inputs:
        SonarCloud: 'SonarCloud'
        organization: 'willisgroup'
        scannerMode: 'MSBuild'
        projectKey: ${{ parameters.projectKey }}
        projectName: ${{ parameters.projectName }}

    - task: NuGetCommand@2
      displayName: NuGet restore
      inputs:
        solution: ${{ parameters.solution }}
        selectOrConfig: config
        feedRestore: f00ed281-3de5-426f-9362-59137fc4da35
        nugetConfigPath: ${{ parameters.nugetConfigPath }}
        externalFeedCredentials: 'RIC Wtw.Crb.Common'     

    - task: DotNetCoreCLI@2
      displayName: 'dotnet build'
      inputs:
        command: build
        projects: ${{ parameters.projectOrSolution }}
        arguments: '--configuration ${{ parameters.buildConfiguration }} /p:DeployOnBuild=true /p:PackageAsSingleFile=true /p:PackageLocation="$(build.artifactstagingdirectory)" /p:OutDir="$(build.artifactstagingdirectory)"'

    - task: DotNetCoreCLI@2
      displayName: dotnet test
      enabled: ${{ parameters.enabled }}
      inputs:
        command: test
        projects: ${{ parameters.projects }}
        arguments: --configuration ${{parameters.buildConfiguration}} --collect "Code coverage"
        
    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: publish
        publishWebProjects: false
        projects: ${{ parameters.projectOrSolution }}
        arguments: '--configuration ${{ parameters.buildConfiguration }} --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: false
        modifyOutputPath: false

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    - task: PowerShell@2
      displayName: PowerShell Script
      enabled: ${{ parameters.enabled }}
      inputs:
        targetType: inline
        script: >-
          $Path = "$(Build.ArtifactStagingDirectory)"


          Tree $Path /F | Select-Object -Skip 2
    - task: SonarCloudAnalyze@1
      displayName: 'Run SonarCloud Code Analysis'
      enabled: ${{ parameters.SonarCloudenabled }}

    - task: SonarCloudPublish@1
      displayName: 'Publish SonarCloud Result'
      enabled: ${{ parameters.SonarCloudenabled }}
      inputs: 
        pollingTimeoutSec: '300'

- ${{each env in parameters.environments}}:
  - ${{each region in env.region}}:
    - ${{if eq(variables['Build.SourceBranchName'], env.branchName) }}:
      - stage: ${{ env.environment }}_${{ region }}
        displayName: Deploy_to_${{ env.environment }}_${{ region }}
        dependsOn:
        - Build
        - ${{ env.dependsOn }}
        condition: succeeded()
        jobs:
        - deployment: Deploy
          displayName: Deploy job
          environment: ${{ env.environment }}
          variables:
            - group: _GlobalRegion_${{ region }}
            - ${{ if eq(parameters.isaddvargroupsuffix, true) }}:
              - group: _GlobalSettings_${{ env.environment }}_RIC
            - ${{ else }}:
              - group: _GlobalSettings_${{ env.environment }}
            - ${{each vg in parameters.variableGroup}}:
              - ${{if eq(vg.environment, env.environment) }}:
                - ${{each group in vg.groups}}:
                  - group: ${{ group }}

          strategy:
            runOnce:
              deploy:
                steps:
                - task: DownloadBuildArtifacts@1
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'drop'
                    downloadPath: '$(System.ArtifactsDirectory)'
                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: ${{ env.azuresub }}
                    appType: 'apiApp'
                    WebAppName: ${{ parameters.WebAppName }}
                    packageForLinux: '$(System.ArtifactsDirectory)/drop'
                    enableCustomDeployment: true
                    RemoveAdditionalFilesFlag: true
                    RenameFilesFlag: true
                    DeploymentType: webDeploy
                    JSONFiles: '**/appsettings.json'
                    AppSettings: ${{ parameters.AppSettings }}
                    ${{ if eq(env.isDeployToSlot, true) }}:
                      slotName: ${{ env.environment }}
                    ${{ if eq(env.isDeployToSlot, true) }}:
                      deployToSlotOrASE: true
                    ${{ if eq(env.isDeployToSlot, true) }}:
                      ResourceGroupName: ${{ parameters.ResourceGroupName }}             